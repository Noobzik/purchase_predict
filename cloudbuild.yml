steps:
- name: "noobzik/uv-gcp-cloud-build"
  id: CI
  entrypoint: /bin/bash
  secretEnv: ['SERVICE_ACCOUNT']
  env:
    - PROJECT_ID=$PROJECT_ID
  args:
  - -c
  - |
    echo "$$SERVICE_ACCOUNT" > service_account.json
    if ! gcloud auth activate-service-account --key-file=service_account.json; then
      echo "ERROR: gcloud authenfication failed!"
      exit 1
    fi
    gcloud config set project "$PROJECT_ID"
    chmod a+x install.sh && 
    ./install.sh &&
    source .venv/bin/activate &&
    pytest .
- name: "noobzik/uv-gcp-cloud-build"
  id: CD
  entrypoint: /bin/bash
  secretEnv: ['SERVICE_ACCOUNT']
  args:
  - -c
  - |
    echo "$$SERVICE_ACCOUNT" > service_account.json
    if ! gcloud auth activate-service-account --key-file=service_account.json; then
      echo "ERROR: gcloud authenfication failed!"
      exit 1
    fi
    gcloud config set project "$PROJECT_ID"
    chmod a+x install.sh && ./install.sh && source .venv/bin/activate && kedro run
  env:
  - 'ENV=$BRANCH_NAME'
  - 'MLFLOW_SERVER=$_MLFLOW_SERVER'
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  id: API Deploy
  secretEnv: ['GITHUB_TOKEN']
  entrypoint: 'bash'
  args:
  - '-c'
  - |
      git clone --branch $BRANCH_NAME https://$$GITHUB_TOKEN@github.com/noobzik/purchase_predict_api.git /tmp/purchase_predict_api
      cd /tmp/purchase_predict_api
      gcloud builds submit \
        --config /tmp/purchase_predict_api/cloudbuild.yaml /tmp/purchase_predict_api \
        --substitutions=SHORT_SHA=$SHORT_SHA
timeout: 1200s

logs_bucket: gs://purchase_predict
availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/cloud-build/versions/1
    env: SERVICE_ACCOUNT
  - versionName: projects/$PROJECT_ID/secrets/GITHUB_TOKEN/versions/latest
    env: GITHUB_TOKEN